version: '3.7'

services:
  master:
    image: citusdata/citus:12.1.3
    labels: ["com.citusdata.role=Master"]
    ports:
      - "5432:5432"
    environment: &AUTH
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repluser
      - POSTGRESQL_REPLICATION_PASSWORD=replpassword
    volumes:
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
      - ./db/backup:/backup
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 2s
      retries: 5

  worker:
    image: citusdata/citus:12.1.3
    labels: [ "com.citusdata.role=Worker" ]
    depends_on: [ manager ]
    environment: *AUTH
    command: "/wait-for-manager.sh"

  manager:
    image: citusdata/membership-manager:0.3.0
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
      - healthcheck-volume:/healthcheck
    depends_on: [ master ]
    environment: *AUTH

  rabbit:
    build:
      dockerfile: rabbit/Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword

  backend:
    build:
      args:
        JAR_FILE: build/libs/socialnetwork-dialogues-1.0.jar
    ports:
      - "8080:8080"
    depends_on:
      master:
        condition: service_healthy
      worker:
        condition: service_healthy
      manager:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://master:5432/sn
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres